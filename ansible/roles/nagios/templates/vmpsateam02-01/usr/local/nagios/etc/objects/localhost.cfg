###############################################################################
# LOCALHOST.CFG - SAMPLE OBJECT CONFIG FILE FOR MONITORING THIS MACHINE
#
#
# NOTE: This config file is intended to serve as an *extremely* simple
#       example of how you can create configuration entries to monitor
#       the local (Linux) machine.
#
###############################################################################



###############################################################################
#
# HOST DEFINITION
#
###############################################################################

# Define a host for the local machine

define host {

use                     linux-server            ; Name of host template to use
; This host definition will inherit all variables that are defined
; in (or inherited by) the linux-server host template definition.
host_name               localhost
alias                   vmpsateam02-01
address                 127.0.0.1
}



###############################################################################
#
# HOST GROUP DEFINITION
#
###############################################################################

# Define an optional hostgroup for Linux machines

define hostgroup {

hostgroup_name          linux-servers           ; The name of the hostgroup
alias                   Linux Servers           ; Long name of the group
members                 localhost,vmpsateam02-02               ; Comma separated list of hosts that belong to this group
}



###############################################################################
#
# SERVICE DEFINITIONS
#
###############################################################################

define service {
use                     local-service
host_name               localhost
service_description     HTTP
check_command           check_http
notifications_enabled   0
}

### Custom services:

# OS:

define service {

use                     local-service
host_name               localhost
service_description     Ping Self
check_command           check_ping!100.0,20%!500.0,60%
}

define service {
use                     local-service
host_name               localhost
service_description     Current Load
check_command           check_local_load!5.0,4.0,3.0!10.0,6.0,4.0
}

define service {
use                     local-service
host_name               localhost
service_description     Swap
check_command           check_local_swap!20%!10%
}

define service {
use                     local-service
host_name               localhost
service_description     Procs
check_command           check_local_procs!250!400!RSZDT
}

define service {
use                     local-service
host_name               localhost
service_description     Users
check_command           check_local_users!20!50
}

define service {
use                     local-service
host_name               localhost
service_description     Disk
check_command           check_local_disk!20%!10%!/
}

# Network:

define service {
use                     local-service
host_name               localhost
service_description     SSH
check_command           check_ssh
notifications_enabled   0
}

define service {
use                     local-service
host_name               localhost
service_description     Team-Network Ping Self
check_command           check_ping!100.0,20%!500.0,60%!-H 192.168.2.1
}

define service {
use                     local-service
host_name               localhost
service_description     Team-Network Ping VM02
check_command           check_ping!100.0,20%!500.0,60%!-H 192.168.2.2
}

{% for ip in routers %}
define service {
use                     local-service
host_name               localhost
service_description     Ping {{ ip }}
check_command           check_ping!100.0,20%!500.0,60%!-H {{ ip }}
}
{% endfor %}

# DNS
define service {
use                     generic-service
host_name               localhost
service_description     DNS Query for early-bird
check_command           check_dns!early-bird.psa-team02.cit.tum.de!192.168.2.1
}

define service {
use                     generic-service
host_name               localhost
service_description     Check Bind9 Process
check_command           check_local_procs!-C named
}

# DHCP

define service {
use                     generic-service
host_name               localhost
service_description     DHCP Check
check_command           check_dhcp!-s 192.168.2.1 -i enp0s8
notification_interval   60
notification_options    w,u,c,r
contact_groups          admins
}

# Web server
define service {
use                     generic-service
host_name               localhost
service_description     Check Webserver HTTP
check_command           check_http!-H 127.0.0.1 -p 80
}

define service {
use                     generic-service
host_name               localhost
service_description     Check Webserver HTTPS
check_command           check_http!-H 127.0.0.1 -p 443 -S
}

# Datenbank
define service {
use                     generic-service
host_name               localhost
service_description     Check Database
check_command           check_pgsql!wikijs!-H 127.0.0.1 -P 5432 -d wikijs -p 1234
}

# Web-App
define service {
use                     generic-service
host_name               localhost
service_description     Check WikiJS
check_command           check_http!-H 127.0.0.1 -p 8081
}

# Fileserver

define service {
use                 local-service
host_name           localhost
service_description Disk Space Fileserver
check_command       check_local_disk!20%!10%!/mnt/raid
}

# LDAP
define service {
use                 local-service
host_name           localhost
service_description LDAP
check_command       check_ldap!-H ldap.psa-team02.cit.tum.de -p 636 -S -b "{{ ldap.directory.tree }}" -D "cn=admin,{{ ldap.directory.tree }}" -P {{ ldap.directory.admin_password }} -3
}

# Mail

define service {
use                 local-service
host_name           localhost
service_description Mail Queue Length
check_command       check_mail_queue
}

define service {
use                 local-service
host_name           localhost
service_description Postfix
check_command       check_tcp!25
}

define service {
use                 local-service
host_name           localhost
service_description Dovecot
check_command       check_tcp!143
}
